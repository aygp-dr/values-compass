# direnv configuration file for Values Compass project
# Put this file in your project root and run `direnv allow`

# Load environment variables from .env file (copy from .env.sample first)
source_env_if_exists .env

# Set up Python environment path
layout python python3

# Make sure dependencies are installed
has pip && echo "Setting up project dependencies..." && pip install -e . || echo "pip not found, please install project dependencies manually"

# Set project-specific path variables
export PROJECT_ROOT=$(pwd)
export PYTHONPATH=$PYTHONPATH:$PROJECT_ROOT

# Configure HF dataset cache to be local to the project
export HF_DATASETS_CACHE=${PROJECT_ROOT}/.cache/datasets
export TRANSFORMERS_CACHE=${PROJECT_ROOT}/.cache/transformers
export HF_ASSETS_CACHE=${PROJECT_ROOT}/.cache/assets

# Verify Hugging Face authentication status
if [ -n "$HF_TOKEN" ]; then
  echo "ü§ó Hugging Face token found in environment"
  
  # Validate token if huggingface-cli is available
  if has huggingface-cli; then
    WHOAMI_OUTPUT=$(huggingface-cli whoami 2>&1)
    if [[ $WHOAMI_OUTPUT == *"error"* ]]; then
      echo "‚ö†Ô∏è  Warning: Invalid or expired HF_TOKEN"
      echo "To update your token, edit .env file or login with:"
      echo "  huggingface-cli login"
    else
      echo "‚úÖ HF token validated!"
    fi
  else
    echo "‚ÑπÔ∏è  Install huggingface-cli to validate your token with: pip install huggingface-cli"
  fi
else
  echo "‚ö†Ô∏è  Warning: HF_TOKEN not set. Some operations may fail."
  echo "Copy .env.sample to .env and update your Hugging Face token."
fi

# Enable faster transfers
export HF_HUB_ENABLE_HF_TRANSFER=1

# Display help information
echo "Values Compass environment activated! üß≠"
echo "‚Ä¢ Run 'python -m values_explorer.main' to start exploring the values dataset"
echo "‚Ä¢ Access notebooks: cd notebooks && jupyter lab exploration.org"